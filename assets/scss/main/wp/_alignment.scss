/* FILE: main/wp/_alignment.scss */

.site-content {
	// Needed to prevent horizontal scrolling due to incorrect
	// `100vw` calculation in browsers on Windows operating system.
	overflow-x: hidden;
}

.align-horizontal-wrap {
	margin-bottom: 0;
}

.alignleft,
.alignright {

	&,
	&:last-child {
		margin-bottom: var(--typography_font_size_base); // Simulating rem unit for block editor.
	}

}

.alignleft {
	float: left;

	&,
	[class*="wp-block-"] & {
		margin-right: var(--typography_font_size_base); // Simulating rem unit for block editor.

		@include media( map_get( $breakpoint, 'l' ) ) {
			margin-right: calc( var(--typography_font_size_base) * 2 ); // Simulating rem unit for block editor.
		}

	}

}

.alignright {
	float: right;

	&,
	[class*="wp-block-"] & {
		margin-left: var(--typography_font_size_base); // Simulating rem unit for block editor.

		@include media( map_get( $breakpoint, 'l' ) ) {
			margin-left: calc( var(--typography_font_size_base) * 2 ); // Simulating rem unit for block editor.
		}

	}

}

.aligncenter {
	float: none;
	clear: both;
	display: block;
	justify-content: center;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
}

.alignnone {
	margin-left: 0;
	margin-right: 0;
}

.align-wrap, // Backwards compatibility (pre-2.1.0) for possible custom HTML wrappers around "Shortcode" blocks.
.alignfull,
.alignwide-wrap {
	clear: both;
	// position: relative;
	width: calc( 100vw - var(--scrollbar_width) );
	max-width: calc( 100vw - var(--scrollbar_width) );
	margin-#{$left}: calc( 50% - 50vw + ( var(--scrollbar_width) / 2 ) );
	// z-index: 1; // This is for when using negative top margin to stack up over the Cover block overlay.

	.has-widgets-sidebar .content-area & {
		@include media( map_get( $breakpoint, 'l' ) ) {
			width: auto;
			margin-#{$left}: calc( ( 50% / #{ 1 - ( 100 - $page_content_width - $page_content_gutter ) / 100 } ) - 50vw + ( var(--scrollbar_width) / 2 ) );
		}
	}

}

.alignwide {
	width: var(--layout_width_content);
	max-width: 100%;
	margin-left: auto;
	margin-right: auto;

	&-wrap {
		padding-left: var(--body_padding);
		padding-right: var(--body_padding);

		&:not(:last-child) > .alignwide {
			margin-bottom: var(--golden_rem); // Simulating rem unit for block editor.
		}

		.has-widgets-sidebar .content-area & {
			@include media( map_get( $breakpoint, 'l' ) ) {
				padding-#{$right}: 0;
			}
		}

	}

	.has-widgets-sidebar .content-area & {
		@include media( map_get( $breakpoint, 'l' ) ) {
			margin-#{$right}: 0;
		}
	}

}

.alignfull {

	.alignwide & {
		width: 100%;
		margin-left: 0;
		margin-right: 0;
	}

	.has-background.has-background & {
		width: auto;
		margin-left: calc( -1 * var(--block_padding) );
		margin-right: calc( -1 * var(--block_padding) );
	}

}
